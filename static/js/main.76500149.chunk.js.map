{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,uDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,KAC/C,gCACC,6BAAKF,IACL,4BAAIC,WCUOK,EAdE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAIbC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACvC,OAAO,cAAC,EAAD,CAAyBT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAMC,MAAOM,EAAOI,GAAGV,OAAvEM,EAAOI,GAAGT,OAE7B,OACC,8BACCM,KCEYI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKX,UAAU,MAAf,SACA,uBACAA,UAAU,mCACVY,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCGI,EARA,SAACC,GAChB,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,YCmBMC,E,kDArBf,WAAYN,GAAO,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAKzB,OAAGG,KAAKJ,MAAMC,SACN,6DAEAG,KAAKX,MAAMK,a,GAjBQQ,aCgDbC,G,wDAzCd,aAAc,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbxC,EAAKX,MAAM,CACVnB,OAAQ,GACRM,YAAa,IAJF,E,gEAQM,IAAD,OAClByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACxB,OAAQmC,S,+BAO5B,IAAD,EACsBZ,KAAKJ,MAA5BnB,EADC,EACDA,OAAQM,EADP,EACOA,YACT8B,EAAepC,EAAOqC,QAAO,SAAAC,GAClC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAASlC,EAAYiC,kBAEvD,OAAQvC,EAAOyC,OAId,sBAAK7C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWW,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAAQoC,WARpB,gD,GAzBiBX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAK1BX,M","file":"static/js/main.76500149.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw-2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}`} />\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n\t// if (true) {\r\n\t// \tthrow new Error('NOOOOOO!');\r\n\t// }\r\n\tconst cardComponent = robots.map((user, i) => {\r\n\t\treturn <Card key={robots[i].id} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n\t})\r\n\treturn (\r\n\t\t<div>\r\n\t\t{cardComponent}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input\r\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search'\r\n\t\tplaceholder='search robots' \r\n\t\tonChange={searchChange}\r\n\t\t  />\r\n\t\t</div>\r\n\t);\r\n} \r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\nreturn(\r\n\t<div style={{overflowY: 'scroll', border: '5px solid black', height: '500px'}}>\r\n\t\t{props.children}\r\n\t</div>\r\n);\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\nconstructor(props){\r\nsuper(props);\r\nthis.state = {\r\n\thasError: false\r\n\t}\r\n}\r\n\r\ncomponentDidCatch(error, info){\r\n\tthis.setState({hasError: true})\r\n}\r\n\r\n\r\nrender(){\r\n\tif(this.state.hasError){\r\n\t\treturn\t<h1>Oops, that doesnt look good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n// import {robots} from './robots';\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state={\r\n\t\t\trobots: [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidMount(){\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=>response.json())\r\n\t.then(users => this.setState({robots: users}));\r\n}\r\n\r\nonSearchChange = (event) => {\r\n\tthis.setState({searchField: event.target.value})\r\n}\r\n\r\n\trender() {\r\n\t\tconst {robots, searchField} = this.state;\r\n\t\tconst filterRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n\t})\r\n\treturn !robots.length ?\r\n <h1>Loading...</h1> :\r\n \r\n(\r\n\t\t<div className='tc'>\r\n\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t<Scroll>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t<CardList robots={filterRobots}/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t</Scroll>\r\n\t\t</div>\r\n\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n<App />\n, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}